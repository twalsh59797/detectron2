MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  META_ARCHITECTURE: "RetinaNet"
  BACKBONE:
    NAME: "build_retinanet_resnet_fpn_backbone"
  RESNETS:
    DEPTH: 50
    OUT_FEATURES: ["res3", "res4", "res5"]
  ANCHOR_GENERATOR:
    SIZES: !!python/object/apply:eval ["[[x, x * 2**(1.0/3), x * 2**(2.0/3) ] for x in [32, 64, 128, 256, 512 ]]"]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
  FPN:
    IN_FEATURES: ["res3", "res4", "res5"]
  RETINANET:
    IOU_THRESHOLDS: [0.4, 0.5]
    IOU_LABELS: [0, -1, 1]
    IN_FEATURES: ["p3", "p4", "p5", "p6", "p7"]
    NUM_CLASSES: 10
    HIERARCHICAL_FOCAL_LOSS: True
    HIERARCHICAL_LOSS_WEIGHTS: [1, 1]
    HIERARCHICAL_INCLUDE_ROOT: False

DATASETS:
  TRAIN: ("bdd100k_train",)
  TEST: ("bdd100k_val",)
SOLVER:
  IMS_PER_BATCH: 16
  BASE_LR: 0.01  # Note that RetinaNet uses a different default learning rate
  STEPS: (60000, 80000)
  MAX_ITER: 90000
INPUT:
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  CROP:
    ENABLED: True
TEST:
  EVAL_HIERARCHICAL: True
OUTPUT_DIR: "output/bdd/retinanet_50_1x_baseline"
